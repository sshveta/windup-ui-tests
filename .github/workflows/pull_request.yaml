name: Pull request test
on: [pull_request]

jobs:
  k8s-tests:
    name: Collect test cases
    runs-on: ubuntu-latest
    outputs:
      tests: ${{ steps.event.outputs.tests }}
    steps:
      - name: Checkout to pull request branch
        uses: actions/checkout@v2
      - id: file_changes
        uses: jitterbit/get-changed-files@v1
        continue-on-error: true
        with:
          format: 'json'
        # Create event to generate ouput of comma separated test files only
      - id: event
        run: |
          test_files=`python3 -c 'print(",".join([file for file in ${{ steps.file_changes.outputs.all }} if ".test.ts" in file]))'`
          echo "::set-output name=tests::$test_files"
  k8s:
    name: Run collected tests
    needs: k8s-tests
    if: ${{ needs.k8s-tests.outputs.tests }}
    runs-on: ubuntu-latest
    steps:
      - name: start minikube
        id: minikube
        with:
          minikube-version: 1.24.0
          driver: docker
          cpus: 12
          memory: 20g
          kubernetes-version: v1.23.3
        uses: medyagh/setup-minikube@master
    
      - name: Kubectl enable addons ingress
        run: minikube addons enable ingress
      - name: Kubectl enable addons registry
        run: minikube addons enable registry
      - name: Validate Minikube
        run: minikube status | grep Running
      - name: Validate enabled addon in arg
        run: minikube addons list -o json | jq '.registry.Status' | grep enabled
      - name: Validate Cluster
        run: kubectl get nodes
      - name: Kubectl enable addons
        run: minikube addons enable dashboard
      - name: Kubectl enable olm
        run: minikube addons enable olm

      - name: Download OLM
        run: curl -sL https://github.com/operator-framework/operator-lifecycle-manager/releases/download/v0.22.0/install.sh | bash -s v0.22.0

      - name: Install windup-operator
        run: kubectl create -f https://operatorhub.io/install/windup-operator.yaml

      - name: Sleep 
        run: sleep 150s
        shell: bash

      - name: watch your operator come up using next command.
        run: kubectl get csv -n my-windup-operator
      - name: Create windup CR
        run: kubectl apply -f windup_cr.yaml -n my-windup-operator

      - name: Check pod status
        run: kubectl get pods -n my-windup-operator

      - name: Verify executor
        run: kubectl wait deployment/windup-executor --for condition=available --timeout=-1s -n my-windup-operator
      - name: Verify postgresql
        run: kubectl wait deployment/windup-postgresql --for condition=available --timeout=-1s -n my-windup-operator
      - name: Verify windup
        run: kubectl wait deployment/windup --for condition=available --timeout=-1s -n my-windup-operator

      - name: Wait for Ingress
        shell: bash
        run: |
          bash -c 'external_ip="";
          echo $external_ip;
          while [[ -z $external_ip ]] 
            do 
              echo "Waiting for end point..."
                external_ip=$(kubectl get ingress windup --template="{{range.status.loadBalancer.ingress}}{{.ip}}{{end}}" -n windup);[[ -z $external_ip ]] &&
                echo $external_ip;
                sleep 10;
            done
          echo "End point ready:" &&
          echo $external_ip;
          export endpoint=$(minikube ip);
          echo "windupUrl=https://$endpoint" >>$GITHUB_ENV
        

      - name: Checkout to pull request branch
        uses: actions/checkout@v2
       # Install NPM dependencies
      - name: Install NPM
        run: npm install .
      - name: Run cypress test cases
        run: npx cypress run --spec ${{ needs.k8s-tests.outputs.tests }} --env user="admin",pass="password",windupUrl=${{ env.windupUrl }}

      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: minikube-tests-screenshots
          path: cypress/screenshots